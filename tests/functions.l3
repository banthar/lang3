
function recursive(a:Int,b:Int):Int {
	if( b == 0 ) {
		return a;
	} else {
		return recursive(a+1,b-1);
	}
}

function simple():Int {
	return 78;
}

var n:Int=42;

function incrementN():Void {
	n=n+1;
}

function returnVoid():Void {
    if(1<2) {
        return;
    }
	n=n+1;
}

function callPointer(f:*function():Void):Void {
	(*f)();
}

function main(argc:Int,argv:**Byte):Int{
	assert recursive(0,10) == 10;
	assert simple() == 78;
	assert n==42;
	incrementN();
	assert n==43;
	incrementN();
	assert n==44;
  returnVoid();
	assert n==44;

	n = 0;
	callPointer(&incrementN);
	assert n == 1;

	var f:*function():Int = &simple;
	assert (*f)() == 78;

	return 0;
}


